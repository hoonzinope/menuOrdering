간단한 주문 시스템의 기능 요구사항을 더 자세히 적어드리겠습니다.
초급 Java 개발자가 디자인 패턴과 클린 코드를 연습하기에 적합하도록,
너무 복잡하지 않으면서도 핵심적인 기능을 포함하도록 구성했습니다.

1. 시스템 개요:
    이 시스템은 콘솔 기반으로 작동하는 간단한 음식 주문 시스템입니다. 사용자는 메뉴를 확인하고, 원하는 메뉴와 수량을 선택하여 주문할 수 있습니다. 주문 내역을 확인하고, 최종 결제 금액을 확인할 수 있습니다.

2. 기능 요구사항:
    2.1. 메뉴 관리:
        메뉴 등록: 관리자는 메뉴 이름, 가격, 설명 등의 정보를 등록할 수 있어야 합니다. (이 부분은 파일이나 하드코딩된 데이터로 초기 메뉴를 구성하는 것으로 간략화할 수 있습니다.)
        메뉴 조회: 사용자는 현재 판매 중인 메뉴 목록을 확인할 수 있어야 합니다. 메뉴 이름, 가격, 설명이 함께 표시되어야 합니다.
    2.2. 주문 생성:
        메뉴 선택: 사용자는 메뉴 번호 또는 이름을 입력하여 주문할 메뉴를 선택할 수 있어야 합니다.
        수량 입력: 사용자는 선택한 메뉴의 수량을 입력할 수 있어야 합니다.
        주문 추가: 선택한 메뉴와 수량이 주문 목록에 추가되어야 합니다.
        주문 취소 (선택적): 사용자는 주문 목록에 추가한 항목을 취소할 수 있어야 합니다.
    2.3. 주문 내역 확인:
        현재 주문 내역 표시: 사용자는 현재까지 주문한 메뉴 목록과 각 메뉴의 수량, 가격을 확인할 수 있어야 합니다.
        총 주문 금액 표시: 현재 주문 내역의 총 금액이 계산되어 표시되어야 합니다.
    2.4. 결제:
        결제 확인: 사용자는 주문 내역을 최종 확인하고 결제를 진행할 수 있습니다. (실제 결제 기능은 구현하지 않고, 결제 완료 메시지를 출력하는 것으로 대체합니다.)
        주문 완료 메시지: 결제가 완료되면 주문 번호와 함께 주문 완료 메시지를 출력합니다.
    2.5. 예외 처리:
        잘못된 입력 처리: 사용자가 메뉴 번호나 수량을 잘못 입력한 경우, 적절한 오류 메시지를 출력하고 다시 입력을 받을 수 있어야 합니다.
        재고 부족 처리 (선택적): 메뉴의 재고가 부족한 경우, 사용자에게 알리고 주문을 진행할 수 없도록 처리할 수 있습니다.

3. 추가 고려 사항 (디자인 패턴 및 클린 코드 적용 관련):

    싱글톤 패턴: 메뉴 관리 클래스를 싱글톤으로 구현하여 전역적으로 접근 가능하게 합니다.
    팩토리 메서드 패턴: 메뉴 객체 (예: 음식, 음료) 생성을 팩토리 클래스에 위임하여 메뉴 종류 추가/변경에 유연하게 대처합니다.
    전략 패턴: 할인 정책 (예: 정액 할인, 비율 할인, 쿠폰 할인) 을 전략 패턴으로 구현하여 다양한 할인 정책을 쉽게 추가/변경할 수 있도록 합니다.
    클린 코드:
    의미 있는 변수 및 메서드 이름 사용
    메서드 분리 (하나의 메서드는 하나의 기능만 수행)
    중복 코드 제거
    적절한 주석 작성
    테스트 코드 (선택적이지만 권장): JUnit 등을 이용하여 각 기능에 대한 테스트 코드를 작성합니다.

4. 예시 시나리오:
    시스템 시작: 메뉴 목록 출력
    사용자: 메뉴 1번 (김치찌개) 선택, 수량 2 입력
    시스템: 주문 목록에 김치찌개 2개 추가, 현재 주문 금액 표시
    사용자: 메뉴 3번 (콜라) 선택, 수량 1 입력
    시스템: 주문 목록에 콜라 1개 추가, 현재 주문 금액 표시
    사용자: 주문 내역 확인
    시스템: 주문 내역과 총 금액 표시
    사용자: 결제 진행
    시스템: 주문 완료 메시지 출력